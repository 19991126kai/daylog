<div class="max-w-3xl mx-auto px-4">
  <h2 class="text-2xl font-bold text-blue-900 my-6 border-b pb-2">記録する</h2>
  <p class="text-xl font-bold my-10">おかえりなさい🙌<br>今日は何を学習しますか？</p>

  <% if @categories.any? %>
    <ul class="space-y-4">
      <% @categories.each do |c| %>
        <li class="rounded-xl bg-white hover:bg-gray-200 hover:cursor-pointer transition">
          <div class="flex items-center justify-between">
            <!-- カテゴリ名ボタン -->
            <%= form_with url: timer_path, method: :get, local: true, class: "flex-1" do %>
              <%= hidden_field_tag :category_id, c.id %>
              <button type="submit"
                      class="py-5 px-5 w-full text-left font-medium hover:cursor-pointer">
                <%= c.name %>
              </button>
            <% end %>

            <!-- 三点リーダ（編集/削除） -->
            <button type="button"
                    class="p-2 mr-5 rounded hover:bg-gray-100"
                    title="メニュー"
                    aria-haspopup="menu"
                    data-kebab-button
                    data-edit-url="<%= edit_category_path(c) %>"
                    data-delete-url="<%= (c.respond_to?(:is_default) && c.is_default?) ? '' : category_path(c) %>"
                    data-name="<%= c.name %>">
              <!-- 横向き 3点 -->
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"
                   fill="currentColor" class="w-5 h-5">
                <path d="M6.25 10a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM11.25 10a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM16.25 10a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0z"/>
              </svg>
            </button>
          </div>
        </li>
      <% end %>
    </ul>
  <% else %>
    <div class="rounded-xl border border-dashed p-10 text-center text-gray-600 bg-white">
      <p class="mb-3">カテゴリがありません</p>
      <p class="text-sm">カテゴリを追加して学習の記録をはじめましょう</p>
    </div>
  <% end %>

  <!-- 「未分類で記録する」ボタン -->
  <div class="flex justify-center mt-6">
    <%= link_to "未分類で記録する", timer_path, class: "text-sm underline text-gray-700" %>
  </div>

  <!-- 「カテゴリを追加する」ボタン -->
  <div class="flex justify-center mt-8">
    <%= link_to "カテゴリを追加する", new_category_path,
          class: "rounded-xl border border-gray-400  px-6 py-3 text-base hover:bg-gray-200 transition" %>
  </div>
</div>

<script>
(function () {
  const CSRF = "<%= form_authenticity_token %>";

  function ensureMenu() {
    let m = document.getElementById("floating-kebab-menu");
    if (!m) {
      m = document.createElement("div");
      m.id = "floating-kebab-menu";
      m.className = "hidden border border-gray-200 bg-white rounded-lg shadow w-40 p-1";
      m.style.position = "fixed"; // レイアウトに影響しない
      document.body.appendChild(m);
    }
    return m;
  }

  function buildMenuHTML(editUrl, deleteUrl, name) {
    const edit = `<a href="${editUrl}" class="block px-3 py-2 text-sm hover:bg-gray-50" role="menuitem">編集</a>`;
    const del = deleteUrl
      ? `<form method="post" action="${deleteUrl}" class="block" role="menuitem"
               onsubmit="return confirm('${name} を削除します。よろしいですか？')">
           <input type="hidden" name="authenticity_token" value="${CSRF}">
           <input type="hidden" name="_method" value="delete">
           <button type="submit" class="w-full text-left px-3 py-2 text-sm hover:bg-gray-50">削除</button>
         </form>`
      : `<span class="block px-3 py-2 text-sm text-gray-400 select-none" role="menuitem">削除</span>`;
    return edit + del;
  }

  let openBtn = null;

  document.addEventListener("click", (e) => {
    const btn = e.target.closest("[data-kebab-button]");
    const menu = ensureMenu();

    // 外側クリック → 閉じる
    if (!btn) {
      if (!menu.classList.contains("hidden")) menu.classList.add("hidden");
      openBtn = null;
      return;
    }

    // 内容差し替え
    menu.innerHTML = buildMenuHTML(
      btn.getAttribute("data-edit-url"),
      btn.getAttribute("data-delete-url"),
      btn.getAttribute("data-name") || ""
    );

    // 位置：ボタン直下・右寄せ 画面外に出ないよう補正
    const r = btn.getBoundingClientRect();
    const top = r.bottom + 6;
    menu.style.top = top + "px";
    menu.classList.remove("hidden");
    const mw = menu.offsetWidth || 160;
    const left = Math.min(Math.max(8, r.right - mw), window.innerWidth - mw - 8);
    menu.style.left = left + "px";

    openBtn = btn;
  });

})();
</script>
